=begin
#Merge Ticketing API

#The unified API for building rich integrations with multiple Ticketing platforms.

The version of the OpenAPI document: 1.0
Contact: hello@merge.dev
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.1

=end

require 'spec_helper'
require 'json'

# Unit tests for MergeTicketingClient::TicketsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TicketsApi' do
  before do
    # run before each test
    @api_instance = MergeTicketingClient::TicketsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TicketsApi' do
    it 'should create an instance of TicketsApi' do
      expect(@api_instance).to be_instance_of(MergeTicketingClient::TicketsApi)
    end
  end

  # unit tests for tickets_collaborators_list
  # Returns a list of &#x60;User&#x60; objects.
  # @param x_account_token Token identifying the end user.
  # @param parent_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor The pagination cursor value.
  # @option opts [String] :expand Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
  # @option opts [Boolean] :include_deleted_data Whether to include data that was marked as deleted by third party webhooks.
  # @option opts [Boolean] :include_remote_data Whether to include the original data Merge fetched from the third-party to produce these models.
  # @option opts [Integer] :page_size Number of results to return per page.
  # @return [PaginatedUserList]
  describe 'tickets_collaborators_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tickets_create
  # Creates a &#x60;Ticket&#x60; object with the given values.
  # @param x_account_token Token identifying the end user.
  # @param ticket_endpoint_request 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :is_debug_mode Whether to include debug fields (such as log file links) in the response.
  # @option opts [Boolean] :run_async Whether or not third-party updates should be run asynchronously.
  # @return [TicketResponse]
  describe 'tickets_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tickets_list
  # Returns a list of &#x60;Ticket&#x60; objects.
  # @param x_account_token Token identifying the end user.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :account_id If provided, will only return tickets for this account.
  # @option opts [String] :assignee_ids If provided, will only return tickets assigned to the assignee_ids; multiple assignee_ids can be separated by commas.
  # @option opts [String] :collection_ids If provided, will only return tickets assigned to the collection_ids; multiple collection_ids can be separated by commas.
  # @option opts [Time] :completed_after If provided, will only return tickets completed after this datetime.
  # @option opts [Time] :completed_before If provided, will only return tickets completed before this datetime.
  # @option opts [String] :contact_id If provided, will only return tickets for this contact.
  # @option opts [Time] :created_after If provided, will only return objects created after this datetime.
  # @option opts [Time] :created_before If provided, will only return objects created before this datetime.
  # @option opts [String] :cursor The pagination cursor value.
  # @option opts [Time] :due_after If provided, will only return tickets due after this datetime.
  # @option opts [Time] :due_before If provided, will only return tickets due before this datetime.
  # @option opts [String] :expand Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
  # @option opts [Boolean] :include_deleted_data Whether to include data that was marked as deleted by third party webhooks.
  # @option opts [Boolean] :include_remote_data Whether to include the original data Merge fetched from the third-party to produce these models.
  # @option opts [Boolean] :include_remote_fields Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format.
  # @option opts [Time] :modified_after If provided, only objects synced by Merge after this date time will be returned.
  # @option opts [Time] :modified_before If provided, only objects synced by Merge before this date time will be returned.
  # @option opts [Integer] :page_size Number of results to return per page.
  # @option opts [String] :parent_ticket_id If provided, will only return sub tickets of the parent_ticket_id.
  # @option opts [String] :priority If provided, will only return tickets of this priority.  * &#x60;URGENT&#x60; - URGENT * &#x60;HIGH&#x60; - HIGH * &#x60;NORMAL&#x60; - NORMAL * &#x60;LOW&#x60; - LOW
  # @option opts [String] :project_id If provided, will only return tickets for this project.
  # @option opts [Time] :remote_created_after If provided, will only return tickets created in the third party platform after this datetime.
  # @option opts [Time] :remote_created_before If provided, will only return tickets created in the third party platform before this datetime.
  # @option opts [String] :remote_fields Deprecated. Use show_enum_origins.
  # @option opts [String] :remote_id The API provider&#39;s ID for the given object.
  # @option opts [Time] :remote_updated_after If provided, will only return tickets updated in the third party platform after this datetime.
  # @option opts [Time] :remote_updated_before If provided, will only return tickets updated in the third party platform before this datetime.
  # @option opts [String] :show_enum_origins Which fields should be returned in non-normalized form.
  # @option opts [String] :status If provided, will only return tickets of this status.  * &#x60;OPEN&#x60; - OPEN * &#x60;CLOSED&#x60; - CLOSED * &#x60;IN_PROGRESS&#x60; - IN_PROGRESS * &#x60;ON_HOLD&#x60; - ON_HOLD
  # @option opts [String] :tags If provided, will only return tickets matching the tags; multiple tags can be separated by commas.
  # @option opts [String] :ticket_type If provided, will only return tickets of this type.
  # @return [PaginatedTicketList]
  describe 'tickets_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tickets_meta_patch_retrieve
  # Returns metadata for &#x60;Ticket&#x60; PATCHs.
  # @param x_account_token Token identifying the end user.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [MetaResponse]
  describe 'tickets_meta_patch_retrieve test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tickets_meta_post_retrieve
  # Returns metadata for &#x60;Ticket&#x60; POSTs.
  # @param x_account_token Token identifying the end user.
  # @param [Hash] opts the optional parameters
  # @return [MetaResponse]
  describe 'tickets_meta_post_retrieve test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tickets_partial_update
  # Updates a &#x60;Ticket&#x60; object with the given &#x60;id&#x60;.
  # @param x_account_token Token identifying the end user.
  # @param id 
  # @param patched_ticket_endpoint_request 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :is_debug_mode Whether to include debug fields (such as log file links) in the response.
  # @option opts [Boolean] :run_async Whether or not third-party updates should be run asynchronously.
  # @return [TicketResponse]
  describe 'tickets_partial_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tickets_remote_field_classes_list
  # Returns a list of &#x60;RemoteFieldClass&#x60; objects.
  # @param x_account_token Token identifying the end user.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor The pagination cursor value.
  # @option opts [Boolean] :include_deleted_data Whether to include data that was marked as deleted by third party webhooks.
  # @option opts [Boolean] :include_remote_data Whether to include the original data Merge fetched from the third-party to produce these models.
  # @option opts [Integer] :page_size Number of results to return per page.
  # @return [PaginatedRemoteFieldClassList]
  describe 'tickets_remote_field_classes_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tickets_retrieve
  # Returns a &#x60;Ticket&#x60; object with the given &#x60;id&#x60;.
  # @param x_account_token Token identifying the end user.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
  # @option opts [Boolean] :include_remote_data Whether to include the original data Merge fetched from the third-party to produce these models.
  # @option opts [Boolean] :include_remote_fields Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format.
  # @option opts [String] :remote_fields Deprecated. Use show_enum_origins.
  # @option opts [String] :show_enum_origins Which fields should be returned in non-normalized form.
  # @return [Ticket]
  describe 'tickets_retrieve test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
